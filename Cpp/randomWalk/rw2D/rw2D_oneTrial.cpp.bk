  #include <stdio.h>
  #include <stdlib.h>

#define BULK 0


int main(const int argc, char** argv){
  printf("#random walk 2D v 01\n");
  //printf("hello\n");


  // Output file
  FILE *outfile = fopen("rw2D_oneTrial.dat", "w");
  fprintf(outfile, "#nt x y\n");

  const int Nsteps  = 100;
  //const int Ntrials = 10000000;
  const int Ntrials = 1;

  int x  = 0;
  int y  = 0;

  double x_mean = 0.0;
  double y_mean = 0.0;
  
  double x_var  = 0.0;
  double y_var  = 0.0;

  double x_mean_tmp = 0.0;
  double y_mean_tmp = 0.0;

  double x_var_tmp  = 0.0;
  double y_var_tmp  = 0.0;

  double r_var_tmp  = 0.0;

  const int dnetx=2*Nsteps+1;
  const int dnety=2*Nsteps+1;
  int net[dnetx][dnety]; // Two dimensional net
  
  // DEFINE THE NETWORK
  for (int i=0; i<dnetx; i++)
    for (int j=0; j<dnety; j++)
      net[i][j] = 0;

  //printf("#x= %d, lx = %d\n", x, lx);
  double rnd = 0;
  for (int nt=0; nt < Ntrials; nt++){
    //In position i ==> net[i]
    x  = Nsteps;
    y  = Nsteps;
    for (int ns=0; ns < Nsteps; ns++){
      // Roll a dice and choose a direction between 1 to 4 first neighbors
      rnd = ((double) rand() / (RAND_MAX));
      // rnd = ( rand()%4); 

      if (rnd < 0.25){
        //printf("1 ");
        if ( net[x+1][y] == BULK) { x++; } else ns--;
      }else if ( rnd < 0.5){
        //printf("2 ");
        if ( net[x-1][y] == BULK) { x--; } else ns--;
      }else if ( rnd < 0.75){
        //printf("3 ");
        if ( net[x][y+1] == BULK) { y++; } else ns--;
      }else{
        //printf("4 ");
        if ( net[x][y-1] == BULK) { y--; } else ns--;
      }
      if (true)
        fprintf(outfile, "%d %d %d\n", ns, x, y);
    }
  }
  
  fclose(outfile);
  return EXIT_SUCCESS;
  //return 0;
}
